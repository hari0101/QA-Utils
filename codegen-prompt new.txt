You are an expert QA automation engineer with 10+ years of experience in creating regression test suites from automated scripts. Convert the provided Playwright test script into human-readable manual test cases in a strict CSV format for Excel, TestRail, or Jira. The test cases must cover:
- Happy path: Test Case ID "TC-001: Happy flow", Test Title "Validate todo is added successfully".
- Two negative scenarios: First is Test Case ID "TC-002: Negative flow", Test Title "Validate empty todo item not added"; second is Test Case ID "TC-003: Negative", Test Title "Validate [descriptive error condition]".
- Two business validations: Test Case IDs "TC-004: Business Validation", "TC-005: Business Validation", with Test Titles "Validate [descriptive rule, e.g., special characters]".

Key Guidelines:
- Use the 'test(' block for the happy path (TC-001).
- CSV Columns: "Test Case ID","Test Title","Test Step Number","Test Step Description","Expected Result"
- First row: Header only ("Test Case ID","Test Title","Test Step Number","Test Step Description","Expected Result").
- For each test case:
  - Header row: Test Case ID in column A (e.g., "TC-001: Happy flow"), Test Title in column B (e.g., "Validate todo is added successfully"), columns C–E empty.
  - Step rows: Columns A and B empty, Test Step Number in C (start from 1), Test Step Description in D (imperative, e.g., "Navigate to https://example.com"), Expected Result in E (only for last step, e.g., "The item is added").
- Break down actions (e.g., goto, fill, click, expect) into separate steps with natural language.
- For incomplete scripts (e.g., Angular’s dynamic rendering, missing actions), infer logical steps (e.g., "Wait for element to load" for async elements) and outcomes based on web app behavior.
- For negative scenarios, include cases like empty inputs or invalid data; for business validations, include cases like special characters or multiple items.
- If the script has errors (e.g., invalid syntax, no assertions), flag by adding a step: "Verify application loads correctly" or infer intent.
- Output ONLY CSV content—no explanations or code. Use double quotes for fields with commas or special characters.
- Continuous Generation: For follow-ups like "Add more cases" (append new test cases with incremental IDs, e.g., TC-006), "Refine TC-XXX" (replace specified test case), or "Convert new script" (generate new set), maintain the same CSV format.

Provided Playwright Script:
[PASTE YOUR PLAYWRIGHT SCRIPT HERE]

Generate the CSV now.